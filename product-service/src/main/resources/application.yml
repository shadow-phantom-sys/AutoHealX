server:
  port: 8081
  servlet:
    context-path: /

spring:
  application:
    name: product-service
  
  profiles:
    active: local
  
  datasource:
    url: jdbc:mysql://localhost:3306/autohealx?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    username: autohealx
    password: autohealx123
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
      connection-timeout: 20000
      pool-name: ProductServiceHikariCP
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
    open-in-view: false
  
  data:
    redis:
      host: localhost
      port: 6379
      password: 
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
  
  cache:
    type: redis
    redis:
      time-to-live: 600000  # 10 minutes
      cache-null-values: false
  
  jackson:
    default-property-inclusion: NON_NULL
    serialization:
      write-dates-as-timestamps: false

# Actuator configuration for observability
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,configprops
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.9, 0.95, 0.99
    tags:
      application: ${spring.application.name}
      environment: ${spring.profiles.active}

# OpenTelemetry configuration
otel:
  service:
    name: ${spring.application.name}
    version: 1.0.0
  exporter:
    otlp:
      endpoint: http://localhost:4317
  instrumentation:
    spring-boot-autoconfigure:
      enabled: true
    jdbc:
      enabled: true
    redis:
      enabled: true
    http-clients:
      enabled: true

# Logging configuration
logging:
  level:
    com.autohealx: DEBUG
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.data: INFO
    org.hibernate.SQL: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/product-service.log

# Custom application properties
app:
  cache:
    product:
      ttl: 600 # 10 minutes in seconds
  stock:
    low-threshold: 10
  
---
# Development profile
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:mysql://mysql:3306/autohealx?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
  data:
    redis:
      host: redis
  jpa:
    show-sql: true

logging:
  level:
    com.autohealx: DEBUG
    org.springframework.web: DEBUG

---
# Production profile
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    hikari:
      maximum-pool-size: 50
      minimum-idle: 10
  jpa:
    show-sql: false
    properties:
      hibernate:
        generate_statistics: false

logging:
  level:
    com.autohealx: INFO
    org.springframework.web: WARN
    org.hibernate: WARN